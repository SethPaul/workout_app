name: Deploy & Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  FLUTTER_VERSION: '3.24.3'

jobs:
  build-release:
    name: Build Release APK & AAB
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
    
    - name: Disable Flutter analytics
      run: flutter config --no-analytics
    
    - name: Get dependencies
      run: flutter pub get
    
    - name: Run tests
      run: flutter test --reporter expanded
    
    - name: Build APK (Release)
      run: flutter build apk --release --split-per-abi
    
    - name: Build App Bundle (Release)
      run: flutter build appbundle --release
    
    - name: Upload Release APKs
      uses: actions/upload-artifact@v4
      with:
        name: release-apks
        path: build/app/outputs/flutter-apk/*.apk
    
    - name: Upload App Bundle
      uses: actions/upload-artifact@v4
      with:
        name: release-aab
        path: build/app/outputs/bundle/release/*.aab

  build-ios:
    name: Build iOS (if on macOS runner)
    runs-on: macos-latest
    if: false  # Enable when iOS deployment is needed
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
    
    - name: Get dependencies
      run: flutter pub get
    
    - name: Build iOS
      run: flutter build ios --release --no-codesign
    
    - name: Upload iOS build
      uses: actions/upload-artifact@v4
      with:
        name: ios-build
        path: build/ios/iphoneos/

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-release
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
    
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "artifacts/release-apks/*.apk,artifacts/release-aab/*.aab"
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: true
<<<<<<< Updated upstream
        generateReleaseNotes: true
=======
        generateReleaseNotes: true 
>>>>>>> Stashed changes
